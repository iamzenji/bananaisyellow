


















































WITH ranked_items AS (
    SELECT
    YEAR(t.date) AS year,
    SUM(CASE WHEN m.scale = 'piece' THEN m.qty ELSE m.qty * i.piece_pack END) AS totalQty,
    m.item_id,
    i.category,
    i.brand,
    i.type,
    i.unit,
    i.piece_pack,
    RANK() OVER (PARTITION BY YEAR(t.date) ORDER BY totalQty DESC) AS rank
    FROM
    mesali m 
    JOIN
    transact t ON m.transact_no = t.transact_no 
    JOIN
    inventory i ON m.item_id = i.inventory_id
    GROUP BY
    m.item_id,
    YEAR(t.date)
),
combined_query AS (
    SELECT
    t.transact_no,
    t.date,
    m.qty,
    m.scale,
    m.item_id,
    i.category AS generic_name,
    i.brand AS brand_name,
    i.type AS medicine_type,
    i.unit AS dosage,
    t.cashier_id,
    t.pay_method,
    t.sub_total,
    t.type,
    t.total_dis,
    t.total_amount,
    CASE
    WHEN t.type = 'PWD' THEN IF(m.scale = 'piece',(i.unit_cost * m.qty) - (0.1 * (i.unit_cost * m.qty)), (i.price_pack * m.qty) - (0.1 * (i.price_pack * m.qty))) 
    WHEN t.type = 'Senior' THEN IF(m.scale = 'piece',(i.unit_cost * m.qty) - (0.05 * (i.unit_cost * m.qty)), (i.price_pack * m.qty) - (0.05 * (i.price_pack * m.qty))) 
    ELSE IF(m.scale = 'piece', i.unit_cost * m.qty, i.price_pack * m.qty) 
    END AS amount,
    i.unit_cost,
    i.price_pack,
    i.piece_pack,
    RANK() OVER (ORDER BY m.qty DESC) AS rank
    FROM
    mesali m 
    JOIN
    transact t ON m.transact_no = t.transact_no 
    JOIN
    inventory i ON m.item_id = i.inventory_id
    ORDER BY
    t.date
)
									SELECT
										r.year,
										c.generic_name,
										c.brand_name,
										c.medicine_type,
										c.dosage,
										SUM(DISTINCT r.totalQty) AS total_quantity,
										SUM(DISTINCT c.amount) AS total_amount
									FROM
										combined_query c
									JOIN
										ranked_items r ON c.item_id = r.item_id AND YEAR(c.date) = r.year
									WHERE
										r.rank = 1 AND c.cashier_id = 2
									GROUP BY
										r.year,
										c.generic_name,
										c.brand_name,
										c.medicine_type,
										c.dosage
									ORDER BY
										r.year ASC
									;














































<table id="laman" class="table table-striped table-hover display compact" style="width:100%">
						<thead style=" background-color: rgb(165, 245, 245);">
							<tr>
								<th style="text-align: center;">Brand Name</th>
								<th>Type</th>
								<th>Dosage</th>
								<th>Position</th>
								<th>Piece</th>
								<th>Pack</th>
							</tr>
						</thead>
						<tbody>
							<?php
							$query =  "SELECT * FROM `inventory` LEFT JOIN item_mapping on inventory_id = item_mapping.item_id;";
							$query_run = mysqli_query($connection, $query);

							if (mysqli_num_rows($query_run) > 0) {
								foreach ($query_run as $row) {
							?>
									<tr>
										<td> <?= $row['category'] . " " . $row['brand'] ?></td>
										<td><?= $row['type'] ?> </td>
										<td><?= $row['unit'] ?> </td>
										<td><?php
											if ($row['shelves'] == null) {
												echo "N/A";
											} else {
												echo $row['shelves'] . '-' . $row['row'] . $row['colum'];
											}
											?></td>
										<td> ₱ <?php echo "$row[unit_cost]"; ?>
											<button type="button" value="<?= $row['id'] ?>" class="addPiece btn btn-warning btn-sm">+</button>
										</td>
										<td> ₱ <?php echo "$row[price_pack]"; ?>
											<button type="button" value="<?= $row['id'] ?>" class="addPack btn btn-success btn-sm">+</button>
										</td>
									</tr>
							<?php }
							} ?>
						</tbody>
					</table>




-- testing lareni , experiment mu



WITH 
ranked AS(SELECT
    year(t.date) AS year,
	m.transact_no,
    m.qty,
    m.scale,
    m.item_id,
    t.total_amount,
    i.generic_name,
    i.brand_name,
    i.medicine_type,
    i.dosage,
    RANK() OVER(PARTITION BY year(t.date) ORDER BY m.qty DESC) as rank
FROM mesali m 
JOIN transact t 
ON m.transact_no = t.transact_no
JOIN item i
ON m.item_id = i.id
JOIN info f 
ON m.item_id = f.item_id where t.cashier_id = 2
)

SELECT *
FROM ranked WHERE rank = 1 ORDER BY year ASC;







SELECT
t.date,
	m.transact_no,
    SUM(CASE WHEN m.scale = 'piece' THEN m.qty ELSE 0 END) AS qtypiece,
     SUM(CASE WHEN m.scale = 'pack' THEN m.qty * f.piece_pack ELSE 0 END) AS qtypack,
     SUM(CASE WHEN m.scale = 'piece' THEN m.qty ELSE m.qty * f.piece_pack END) AS total,
    m.item_id,
    i.generic_name,
    i.brand_name,
    i.medicine_type,
    i.dosage,
    f.price_piece,
    f.piece_pack,
    f.price_pack,
    RANK() OVER (ORDER BY SUM(m.qty) DESC) AS rank
    FROM mesali m 
JOIN transact t 
ON m.transact_no = t.transact_no 
JOIN item i
ON m.item_id = i.id
JOIN info f 
ON m.item_id = f.item_id
GROUP by m.item_id, year(t.date) ORDER by date




-- true 

WITH ranked AS(SELECT
	 year(t.date) AS year,
    SUM(CASE WHEN m.scale = 'piece' THEN m.qty ELSE m.qty * f.piece_pack END) AS totalQty,
    m.item_id,
    i.generic_name,
    i.brand_name,
    i.medicine_type,
    i.dosage,
    f.piece_pack,
    RANK() OVER (PARTITION BY year ORDER BY totalQty DESC) AS rank
    FROM mesali m 
JOIN transact t 
ON m.transact_no = t.transact_no 
JOIN item i
ON m.item_id = i.id
JOIN info f 
ON m.item_id = f.item_id
GROUP by m.item_id, year(t.date) ORDER by date
)

SELECT year,generic_name,brand_name,medicine_type,dosage,totalQty
FROM ranked WHERE rank = 1 ORDER BY year ASC;








-- 
CASE
    WHEN t.type = 'PWD' THEN IF(m.scale = 'piece', .2 * (f.price_piece * m.qty), .2 * (f.price_pack * m.qty)) 
    WHEN t.type = 'Senior' THEN IF(m.scale = 'piece', .15 * (f.price_piece * m.qty), .15 * (f.price_pack * m.qty)) 
    ELSE IF(m.scale = 'piece', f.price_piece * m.qty, f.price_pack * m.qty) 
    END AS amount,










    -- tapos ang experiment
    WITH ranked_items AS (
    SELECT
        YEAR(t.date) AS year,
        SUM(CASE WHEN m.scale = 'piece' THEN m.qty ELSE m.qty * f.piece_pack END) AS totalQty,
        m.item_id,
        i.generic_name,
        i.brand_name,
        i.medicine_type,
        i.dosage,
        f.piece_pack,
        RANK() OVER (PARTITION BY YEAR(t.date) ORDER BY totalQty DESC) AS rank
    FROM
        mesali m 
    JOIN
        transact t ON m.transact_no = t.transact_no 
    JOIN
        item i ON m.item_id = i.id
    JOIN
        info f ON m.item_id = f.item_id
    GROUP BY
        m.item_id,
        YEAR(t.date)
),
combined_query AS (
    SELECT
        t.transact_no,
        t.date,
        m.qty,
        m.scale,
        m.item_id,
        i.generic_name,
        i.brand_name,
        i.medicine_type,
        i.dosage,
        t.cashier_id,
        t.pay_method,
        t.sub_total,
        t.type,
        t.total_dis,
        t.total_amount,
        CASE
            WHEN t.type = 'PWD' THEN IF(m.scale = 'piece', 0.2 * (f.price_piece * m.qty), 0.2 * (f.price_pack * m.qty)) 
            WHEN t.type = 'Senior' THEN IF(m.scale = 'piece', 0.15 * (f.price_piece * m.qty), 0.15 * (f.price_pack * m.qty)) 
            ELSE IF(m.scale = 'piece', f.price_piece * m.qty, f.price_pack * m.qty) 
        END AS amount,
        f.price_piece,
        f.price_pack,
        f.piece_pack,
        RANK() OVER (ORDER BY m.qty DESC) AS rank
    FROM
        mesali m 
    JOIN
        transact t ON m.transact_no = t.transact_no 
    JOIN
        item i ON m.item_id = i.id
    JOIN
        info f ON m.item_id = f.item_id 
    ORDER BY
        t.date
)
SELECT
    r.year,
    c.generic_name,
    c.brand_name,
    c.medicine_type,
    c.dosage,
    SUM(DISTINCT r.totalQty) AS total_quantity,
    SUM(DISTINCT c.amount) AS total_amount
FROM
    combined_query c
JOIN
    ranked_items r ON c.item_id = r.item_id AND YEAR(c.date) = r.year
WHERE
    r.rank = 1 AND c.cashier_id = 2
GROUP BY
    r.year,
    c.generic_name,
    c.brand_name,
    c.medicine_type,
    c.dosage
ORDER BY
    r.year ASC;








/*SELECT
t.transact_no,
	 t.date,
    m.qty,
    m.scale,
    m.item_id,
    i.generic_name,
    i.brand_name,
    i.medicine_type,
    i.dosage,
    t.cashier_id,
    t.pay_method,
    t.sub_total,
    t.type,
    t.total_dis,
    t.total_amount,
    CASE
    WHEN t.type = 'PWD' THEN IF(m.scale = 'piece', .2 * (f.price_piece * m.qty), .2 * (f.price_pack * m.qty)) 
    WHEN t.type = 'Senior' THEN IF(m.scale = 'piece', .15 * (f.price_piece * m.qty), .15 * (f.price_pack * m.qty)) 
    ELSE IF(m.scale = 'piece', f.price_piece * m.qty, f.price_pack * m.qty) 
    END AS amount,
    
   
    
    f.price_piece,
    f.price_pack,
    f.piece_pack,
    RANK() OVER (ORDER BY m.qty DESC) AS rank
    FROM mesali m 
JOIN transact t 
ON m.transact_no = t.transact_no 
JOIN item i
ON m.item_id = i.id
JOIN info f 
ON m.item_id = f.item_id ORDER BY t.date

*/

/*
WITH ranked AS(SELECT
	 year(t.date) AS year,
    SUM(CASE WHEN m.scale = 'piece' THEN m.qty ELSE m.qty * f.piece_pack END) AS totalQty,
    m.item_id,
    i.generic_name,
    i.brand_name,
    i.medicine_type,
    i.dosage,
    f.piece_pack,
    RANK() OVER (PARTITION BY year ORDER BY totalQty DESC) AS rank
    FROM mesali m 
JOIN transact t 
ON m.transact_no = t.transact_no 
JOIN item i
ON m.item_id = i.id
JOIN info f 
ON m.item_id = f.item_id
GROUP by m.item_id, year(t.date) ORDER by date
)

SELECT year,generic_name,brand_name,medicine_type,dosage,totalQty
FROM ranked WHERE rank = 1 ORDER BY year ASC;


 SUM(CASE WHEN m.scale = 'piece' THEN m.qty ELSE m.qty * f.piece_pack END) AS totalQty,
    
    SUM( CASE
    WHEN t.type = 'PWD' THEN IF(m.scale = 'piece', .2 * (f.price_piece * m.qty), .2 * (f.price_pack * m.qty)) 
    WHEN t.type = 'Senior' THEN IF(m.scale = 'piece', .15 * (f.price_piece * m.qty), .15 * (f.price_pack * m.qty)) 
    ELSE IF(m.scale = 'piece', f.price_piece * m.qty, f.price_pack * m.qty) 
    END) as sale,
*/